/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.neu.aedproject.rranjolkar.ui;

import edu.neu.aedproject.rranjolkar.AuditItem;
import edu.neu.aedproject.rranjolkar.UserAccount;
import edu.neu.aedproject.rranjolkar.services.LoginService;
import edu.neu.aedproject.rranjolkar.trading.Broker;
import edu.neu.aedproject.rranjolkar.trading.ClientAccount;
import edu.neu.aedproject.rranjolkar.trading.Security;
import edu.neu.aedproject.rranjolkar.trading.TradingNetwork;
import edu.neu.aedproject.rranjolkar.trading.TradingOrganization;
import edu.neu.aedproject.rranjolkar.trading.TradingWorkRequest;
import edu.neu.aedproject.rranjolkar.trading.util.CommonUtils;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rutika Ranjolkar
 */
public class TraderMyOrdersPanel extends javax.swing.JPanel {

    /**
     * Creates new form PortfolioManagerClientsPanel
     */
    public TraderMyOrdersPanel() {
        initComponents();

        populateMyOrders();

        populateBrokers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnsBuySell = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMyOrders = new javax.swing.JTable();
        btnPlace = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbBrokers = new javax.swing.JComboBox<>();
        btnRefresh = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tblMyOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Security", "Side", "Quantity", "Price Limit", "Broker", "Status", "Remaining Qty"
            }
        ));
        jScrollPane1.setViewportView(tblMyOrders);

        btnPlace.setText("Make Placement");
        btnPlace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaceActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("My Orders");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Select a Broker");

        cmbBrokers.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbBrokers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBrokersActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbBrokers, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnPlace, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 395, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnRefresh))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbBrokers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPlace))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPlaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaceActionPerformed
        TradingWorkRequest request = CommonUtils.getSelection(tblMyOrders, 0);
        Broker broker = CommonUtils.getSelection(cmbBrokers);
        if (request == null) {
            CommonUtils.showMessage("Please select an order");
        } else if (broker == null) {
            CommonUtils.showMessage("Please select a broker");
        } else {
            request.place(broker);
            CommonUtils.showMessage("Placed successfully!");
            LoginService.getInstance().getCurrentAccount().getAuditTrail().add(
                    new AuditItem(new Date(), "Placed order: " + request + " with broker: " + broker)
            );
            populateMyOrders();
        }
    }//GEN-LAST:event_btnPlaceActionPerformed

    private void cmbBrokersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBrokersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbBrokersActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        populateMyOrders();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPlace;
    private javax.swing.JButton btnRefresh;
    private javax.swing.ButtonGroup btnsBuySell;
    private javax.swing.JComboBox<String> cmbBrokers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMyOrders;
    // End of variables declaration//GEN-END:variables

    private void populateMyOrders() {
        DefaultTableModel model = (DefaultTableModel) tblMyOrders.getModel();
        model.setRowCount(0);
        UserAccount trader = LoginService.getInstance().getCurrentAccount();
        TradingOrganization organization = (TradingOrganization) LoginService.getInstance().getCurrentOrganization();
        List<TradingWorkRequest> requests = organization.getTradersOrders(trader);
        if (CommonUtils.isNotEmpty(requests)) {
            for (TradingWorkRequest request : requests) {
                Object[] row = {
                    request,
                    request.getSecurity(),
                    request.getSide(),
                    request.getQuantity(),
                    request.getPriceLimit(),
                    request.getBroker() == null ? "" : request.getBroker().getName(),
                    request.getStatus(),
                    request.getRemainingQuantity()
                };
                model.addRow(row);
            }
        }
    }

    private void populateBrokers() {
        TradingNetwork network = (TradingNetwork) LoginService.getInstance().getCurrentNetwork();
        List<Broker> brokers = network.getBrokerDirectory().getBrokers();
        DefaultComboBoxModel model = (DefaultComboBoxModel) cmbBrokers.getModel();
        model.removeAllElements();
        for (Broker broker : brokers) {
            model.addElement(broker);
        }
    }

}
