/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.neu.aedproject.rranjolkar.ui;

import edu.neu.aedproject.rranjolkar.AuditItem;
import edu.neu.aedproject.rranjolkar.services.LoginService;
import edu.neu.aedproject.rranjolkar.trading.ClientAccount;
import edu.neu.aedproject.rranjolkar.trading.Security;
import edu.neu.aedproject.rranjolkar.trading.TradingNetwork;
import edu.neu.aedproject.rranjolkar.trading.TradingOrganization;
import edu.neu.aedproject.rranjolkar.trading.TradingWorkRequest;
import edu.neu.aedproject.rranjolkar.trading.util.CommonUtils;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rutika Ranjolkar
 */
public class TraderTradeMonitorPanel extends javax.swing.JPanel {

    /**
     * Creates new form PortfolioManagerClientsPanel
     */
    public TraderTradeMonitorPanel() {
        initComponents();

        populateTraderMonitor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnsBuySell = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTradeMonitor = new javax.swing.JTable();
        btnAccept = new javax.swing.JButton();
        btnReturn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tblTradeMonitor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Message", "Security", "Side", "Quantity", "Price Limit"
            }
        ));
        jScrollPane1.setViewportView(tblTradeMonitor);

        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        btnReturn.setText("Return");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAccept)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReturn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAccept)
                    .addComponent(btnReturn))
                .addContainerGap(43, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        TradingWorkRequest request = CommonUtils.getSelection(tblTradeMonitor, 0);
        if (request == null) {
            CommonUtils.showMessage("Please select an order");
        } else {
            request.receive(LoginService.getInstance().getCurrentAccount());
            CommonUtils.showMessage("Accepted successfully!");
            LoginService.getInstance().getCurrentAccount().getAuditTrail().add(
                    new AuditItem(new Date(), "Accepted order: " + request)
            );
            populateTraderMonitor();
        }
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        TradingWorkRequest request = CommonUtils.getSelection(tblTradeMonitor, 0);
        if (request == null) {
            CommonUtils.showMessage("Please select an order");
        } else {
            String reason = JOptionPane.showInputDialog("Enter comments");
            request.returnToSender(reason);
            CommonUtils.showMessage("Returned successfully!");
            LoginService.getInstance().getCurrentAccount().getAuditTrail().add(
                    new AuditItem(new Date(), "Accepted order: " + request + " for reason: " + reason)
            );
            populateTraderMonitor();
        }
    }//GEN-LAST:event_btnReturnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnReturn;
    private javax.swing.ButtonGroup btnsBuySell;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTradeMonitor;
    // End of variables declaration//GEN-END:variables

    private void populateTraderMonitor() {
        DefaultTableModel model = (DefaultTableModel) tblTradeMonitor.getModel();
        model.setRowCount(0);
        TradingOrganization organization = (TradingOrganization) LoginService.getInstance().getCurrentOrganization();
        List<TradingWorkRequest> requests = organization.getTradeMonitorRequests();
        if (CommonUtils.isNotEmpty(requests)) {
            for (TradingWorkRequest request : requests) {
                Object[] row = {
                    request,
                    request.getSecurity(),
                    request.getSide(),
                    request.getQuantity(),
                    request.getPriceLimit()
                };
                model.addRow(row);
            }
        }
    }

}
